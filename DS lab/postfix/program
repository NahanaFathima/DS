#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

#define MAX 100

int stack[MAX];
int top = -1;

// Function to push an element onto the stack
void push(int value) {
    if (top >= MAX - 1) {
        printf("Stack overflow\n");
        return;
    }
    stack[++top] = value;
}

// Function to pop an element from the stack
int pop() {
    if (top == -1) {
        printf("Stack underflow\n");
        exit(EXIT_FAILURE);
    }
    return stack[top--];
}

// Function to evaluate a postfix expression
int evaluatePostfix(char* expression) {
    for (int i = 0; expression[i] != '\0'; i++) {
        // If the character is a space, skip it
        if (expression[i] == ' ') continue;

        // If the character is a digit, push it onto the stack
        if (isdigit(expression[i])) {
            push(expression[i] - '0'); // Convert char to int
        } 
        // If the character is an operator
        else {
            int operand2 = pop();
            int operand1 = pop();
            switch (expression[i]) {
                case '+':
                    push(operand1 + operand2);
                    break;
                case '-':
                    push(operand1 - operand2);
                    break;
                case '*':
                    push(operand1 * operand2);
                    break;
                case '/':
                    if (operand2 == 0) {
                        printf("Division by zero error\n");
                        exit(EXIT_FAILURE);
                    }
                    push(operand1 / operand2);
                    break;
                default:
                    printf("Unknown operator: %c\n", expression[i]);
                    exit(EXIT_FAILURE);
            }
        }
    }
    return pop(); // The result will be the last element in the stack
}

int main() {
    char expression[MAX];

    printf("Enter a postfix expression: ");
    fgets(expression, sizeof(expression), stdin);

    int result = evaluatePostfix(expression);
    printf("The result of the postfix evaluation is: %d\n", result);

    return 0;

